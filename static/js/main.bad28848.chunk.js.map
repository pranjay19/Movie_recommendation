{"version":3,"sources":["store.js","components/header/Header.js","components/card/card.js","components/movieList/movieList.js","pages/home/home.js","pages/movieDetail/movie.js","pages/preferences/Preferences.js","App.js","index.js"],"names":["initialState","rating","releaseYear","language","movieRecommendations","store","createStore","state","arguments","length","undefined","action","type","_objectSpread","payload","Header","location","useLocation","React","createElement","className","Link","to","pathname","src","alt","style","textDecoration","placeholder","Cards","_ref","movie","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","useEffect","setTimeout","Fragment","SkeletonTheme","color","highlightColor","Skeleton","height","duration","concat","id","poster_path","original_title","release_date","vote_average","overview","slice","MovieList","movieList","setMovieList","useParams","getData","fetch","then","res","json","data","results","toUpperCase","map","Home","popularMovies","setPopularMovies","Carousel","showThumbs","autoPlay","transitionTime","infiniteLoop","showStatus","backdrop_path","Movie","currentMovieDetail","setMovie","window","scrollTo","tagline","class","vote_count","runtime","genres","genre","name","homepage","href","target","imdb_id","production_companies","company","logo_path","PreferencesComponent","dispatch","useDispatch","_useSelector","useSelector","recommendationsRef","useRef","onSubmit","e","preventDefault","url","response","filteredMovies","filter","toLowerCase","original_language","parseFloat","current","scrollIntoView","behavior","catch","error","console","value","onChange","ref","key","title","App","Router","Routes","Route","path","element","Preferences","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bad28848.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  rating: '',\r\n  releaseYear: '',\r\n  language: '',\r\n  movieRecommendations: [],\r\n};\r\n\r\n// Reducer\r\nconst preferencesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_RATING':\r\n      return { ...state, rating: action.payload };\r\n    case 'SET_RELEASE_YEAR':\r\n      return { ...state, releaseYear: action.payload };\r\n    case 'SET_LANGUAGE':\r\n      return { ...state, language: action.payload };\r\n    case 'SET_MOVIE_RECOMMENDATIONS':\r\n      return { ...state, movieRecommendations: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create Redux store\r\nconst store = createStore(preferencesReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  const location = useLocation();\n\n  return (\n    <div className=\"header\">\n      <div className=\"headerLeft\">\n        <Link to=\"/\" className={location.pathname === \"/\" ? \"active\" : \"\"}>\n          <img\n            className=\"header__icon\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\"\n            alt=\"IMDb Logo\"\n          />\n        </Link>\n        <Link\n          to=\"/movies/popular\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/popular\" ? \"active\" : \"\"}\n        >\n          <span>Popular</span>\n        </Link>\n        <Link\n          to=\"/movies/top_rated\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/top_rated\" ? \"active\" : \"\"}\n        >\n          <span>Top Rated</span>\n        </Link>\n        <Link\n          to=\"/movies/upcoming\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/upcoming\" ? \"active\" : \"\"}\n        >\n          <span>Upcoming</span>\n        </Link>\n        <Link\n          to=\"/movies/preferences\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/preferences\" ? \"active\" : \"\"}\n        >\n          <span>Preferences</span>\n        </Link>\n      </div>\n      <div className=\"headerRight\">\n        <form>\n          <input type=\"text\" placeholder=\"Search for movies...\" />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, {useEffect, useState} from \"react\"\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\"\nimport \"./card.css\"\nimport { Link } from \"react-router-dom\"\n\nconst Cards = ({movie}) => {\n\n    const [isLoading, setIsLoading] = useState(true)\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1500)\n    }, []) \n\n    return <>\n    {\n        isLoading\n        ?\n        <div className=\"cards\">\n            <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\n                <Skeleton height={300} duration={2} />\n            </SkeletonTheme>\n        </div>\n        :\n        <Link to={`/movie/${movie.id}`} style={{textDecoration:\"none\", color:\"white\"}}>\n            <div className=\"cards\">\n                <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie?movie.poster_path:\"\"}`} />\n                <div className=\"cards__overlay\">\n                    <div className=\"card__title\">{movie?movie.original_title:\"\"}</div>\n                    <div className=\"card__runtime\">\n                        {movie?movie.release_date:\"\"}\n                        <span className=\"card__rating\">{movie?movie.vote_average:\"\"}<i className=\"fas fa-star\" /></span>\n                    </div>\n                    <div className=\"card__description\">{movie ? movie.overview.slice(0,118)+\"...\" : \"\"}</div>\n                </div>\n            </div>\n        </Link>\n    }\n    </>\n}\n\nexport default Cards","import React, {useEffect, useState} from \"react\"\nimport \"./movieList.css\"\nimport { useParams } from \"react-router-dom\"\nimport Cards from \"../card/card\"\n\nconst MovieList = () => {\n    \n    const [movieList, setMovieList] = useState([])\n    const {type} = useParams()\n\n    useEffect(() => {\n        getData()\n    }, [])\n\n    useEffect(() => {\n        getData()\n    }, [type])\n\n    const getData = () => {\n        fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n        .then(res => res.json())\n        .then(data => setMovieList(data.results))\n    }\n\n    return (\n        <div className=\"movie__list\">\n            <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\n            <div className=\"list__cards\">\n                {\n                    movieList.map(movie => (\n                        <Cards movie={movie} />\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MovieList","import React, { useEffect, useState } from \"react\"\nimport \"./home.css\"\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport { Link } from \"react-router-dom\";\nimport MovieList from \"../../components/movieList/movieList\";\n\nconst Home = () => {\n\n    const [ popularMovies, setPopularMovies ] = useState([])\n\n    useEffect(() => {\n        fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\")\n        .then(res => res.json())\n        .then(data => setPopularMovies(data.results))\n    }, [])\n\n    return (\n        <>\n            <div className=\"poster\">\n                <Carousel\n                    showThumbs={false}\n                    autoPlay={true}\n                    transitionTime={3}\n                    infiniteLoop={true}\n                    showStatus={false}\n                >\n                    {\n                        popularMovies.map(movie => (\n                            <Link style={{textDecoration:\"none\",color:\"white\"}} to={`/movie/${movie.id}`} >\n                                <div className=\"posterImage\">\n                                    <img src={`https://image.tmdb.org/t/p/original${movie && movie.backdrop_path}`} />\n                                </div>\n                                <div className=\"posterImage__overlay\">\n                                    <div className=\"posterImage__title\">{movie ? movie.original_title: \"\"}</div>\n                                    <div className=\"posterImage__runtime\">\n                                        {movie ? movie.release_date : \"\"}\n                                        <span className=\"posterImage__rating\">\n                                            {movie ? movie.vote_average :\"\"}\n                                            <i className=\"fas fa-star\" />{\" \"}\n                                        </span>\n                                    </div>\n                                    <div className=\"posterImage__description\">{movie ? movie.overview : \"\"}</div>\n                                </div>\n                            </Link>\n                        ))\n                    }\n                </Carousel>\n                <MovieList />\n            </div>\n        </>\n    )\n}\n\nexport default Home","import React, {useEffect, useState} from \"react\"\nimport \"./movie.css\"\nimport { useParams } from \"react-router-dom\"\n\nconst Movie = () => {\n    const [currentMovieDetail, setMovie] = useState()\n    const { id } = useParams()\n\n    useEffect(() => {\n        getData()\n        window.scrollTo(0,0)\n    }, [])\n\n    const getData = () => {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n        .then(res => res.json())\n        .then(data => setMovie(data))\n    }\n\n    return (\n        <div className=\"movie\">\n            <div className=\"movie__intro\">\n                <img className=\"movie__backdrop\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"}`} />\n            </div>\n            <div className=\"movie__detail\">\n                <div className=\"movie__detailLeft\">\n                    <div className=\"movie__posterBox\">\n                        <img className=\"movie__poster\" src={`https://image.tmdb.org/t/p/original${currentMovieDetail ? currentMovieDetail.poster_path : \"\"}`} />\n                    </div>\n                </div>\n                <div className=\"movie__detailRight\">\n                    <div className=\"movie__detailRightTop\">\n                        <div className=\"movie__name\">{currentMovieDetail ? currentMovieDetail.original_title : \"\"}</div>\n                        <div className=\"movie__tagline\">{currentMovieDetail ? currentMovieDetail.tagline : \"\"}</div>\n                        <div className=\"movie__rating\">\n                            {currentMovieDetail ? currentMovieDetail.vote_average: \"\"} <i class=\"fas fa-star\" />\n                            <span className=\"movie__voteCount\">{currentMovieDetail ? \"(\" + currentMovieDetail.vote_count + \") votes\" : \"\"}</span>\n                        </div>  \n                        <div className=\"movie__runtime\">{currentMovieDetail ? currentMovieDetail.runtime + \" mins\" : \"\"}</div>\n                        <div className=\"movie__releaseDate\">{currentMovieDetail ? \"Release date: \" + currentMovieDetail.release_date : \"\"}</div>\n                        <div className=\"movie__genres\">\n                            {\n                                currentMovieDetail && currentMovieDetail.genres\n                                ? \n                                currentMovieDetail.genres.map(genre => (\n                                    <><span className=\"movie__genre\" id={genre.id}>{genre.name}</span></>\n                                )) \n                                : \n                                \"\"\n                            }\n                        </div>\n                    </div>\n                    <div className=\"movie__detailRightBottom\">\n                        <div className=\"synopsisText\">Synopsis</div>\n                        <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\n                    </div>\n                    \n                </div>\n            </div>\n            <div className=\"movie__links\">\n                <div className=\"movie__heading\">Useful Links</div>\n                {\n                    currentMovieDetail && currentMovieDetail.homepage && <a href={currentMovieDetail.homepage} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\n                }\n                {\n                    currentMovieDetail && currentMovieDetail.imdb_id && <a href={\"https://www.imdb.com/title/\" + currentMovieDetail.imdb_id} target=\"_blank\" style={{textDecoration: \"none\"}}><p><span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span></p></a>\n                }\n            </div>\n            <div className=\"movie__heading\">Production companies</div>\n            <div className=\"movie__production\">\n                {\n                    currentMovieDetail && currentMovieDetail.production_companies && currentMovieDetail.production_companies.map(company => (\n                        <>\n                            {\n                                company.logo_path \n                                && \n                                <span className=\"productionCompanyImage\">\n                                    <img className=\"movie__productionComapany\" src={\"https://image.tmdb.org/t/p/original\" + company.logo_path} />\n                                    <span>{company.name}</span>\n                                </span>\n                            }\n                        </>\n                    ))\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Movie","import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Preferences.css';\r\n\r\nconst PreferencesComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const { rating, releaseYear, language, movieRecommendations } = useSelector((state) => state);\r\n\r\n  const recommendationsRef = useRef(null); // Create a ref for the recommendations container\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Make API call using user preferences (rating, releaseYear, language)\r\n    const apiKey = '4e44d9029b1270a757cddc766a1bcb63';\r\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Process the data and filter movie recommendations by rating and language\r\n        const filteredMovies = data.results.filter((movie) => {\r\n          // Check if the input value is \"Finnish\"\r\n          if (language.toLowerCase() === 'finnish') {\r\n            return movie.original_language === 'fi' && movie.vote_average > parseFloat(rating);\r\n          }\r\n          return movie.original_language === 'en' && movie.vote_average > parseFloat(rating);\r\n        });\r\n\r\n        // Update Redux store with the filtered movie recommendations\r\n        dispatch({ type: 'SET_MOVIE_RECOMMENDATIONS', payload: filteredMovies });\r\n\r\n        // Scroll down to the recommendations section\r\n        recommendationsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"preferences-container\">\r\n      <h2>Movie Preferences</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form inputs */}\r\n        <div>\r\n          {/* Rating */}\r\n          <label>\r\n            <span>Rating:</span>\r\n            <input\r\n              type=\"number\"\r\n              value={rating}\r\n              onChange={(e) => dispatch({ type: 'SET_RATING', payload: e.target.value })}\r\n              placeholder=\"Enter minimum rating\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Release Year */}\r\n          <label>\r\n            <span>Release Year:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={releaseYear}\r\n              onChange={(e) => dispatch({ type: 'SET_RELEASE_YEAR', payload: e.target.value })}\r\n              placeholder=\"e.g. 2020\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Language */}\r\n          <label>\r\n            <span>Language:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={language}\r\n              onChange={(e) => dispatch({ type: 'SET_LANGUAGE', payload: e.target.value })}\r\n              placeholder=\"e.g. English, Finnish\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Submit button */}\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Display movie recommendations based on user preferences */}\r\n      <div className=\"recommendations-container\" ref={recommendationsRef}>\r\n        <h3>Movie Recommendations</h3>\r\n        <div className=\"movie__recommendationsList\">\r\n          {movieRecommendations.length > 0 ? (\r\n            movieRecommendations.map((movie) => (\r\n              <div key={movie.id} className=\"movie__recommendation\">\r\n                {/* Render movie details */}\r\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} className=\"movie__recommendationPoster\" />\r\n                <div className=\"movie__recommendationTitle\">{movie.title}</div>\r\n                <div className=\"movie__recommendationRating\">Rating: {movie.vote_average}</div>\r\n                <div className=\"movie__recommendationLanguage\">Language: {movie.original_language}</div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No movie recommendations available.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreferencesComponent;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./pages/home/home\";\nimport MovieList from \"./components/movieList/movieList\";\nimport Movie from \"./pages/movieDetail/movie\";\nimport Preferences from \"./pages/preferences/Preferences\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/movie/:id\" element={<Movie />} />\n          <Route path=\"/movies/:type\" element={<MovieList />} />\n          <Route path=\"/movies/preferences\" element={<Preferences />} />\n          <Route path=\"/*\" element={<h1>Error Page</h1>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}