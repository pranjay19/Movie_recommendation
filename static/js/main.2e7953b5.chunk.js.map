{"version":3,"sources":["store.js","components/header/Header.js","components/card/card.js","components/movieList/movieList.js","pages/home/home.js","pages/movieDetail/movie.js","pages/preferences/Preferences.js","App.js","index.js"],"names":["initialState","rating","releaseYear","language","movieRecommendations","store","createStore","state","arguments","length","undefined","action","type","_objectSpread","payload","Header","location","useLocation","React","createElement","className","Link","to","pathname","src","alt","style","textDecoration","placeholder","Cards","_ref","movie","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","useEffect","setTimeout","Fragment","SkeletonTheme","color","highlightColor","Skeleton","height","duration","concat","id","poster_path","original_title","release_date","vote_average","overview","slice","MovieList","movieList","setMovieList","useParams","getData","fetch","then","res","json","data","results","toUpperCase","map","key","Home","popularMovies","setPopularMovies","Carousel","showThumbs","autoPlay","transitionTime","infiniteLoop","showStatus","backdrop_path","Movie","currentMovieDetail","setMovie","window","scrollTo","tagline","vote_count","runtime","genres","genre","name","homepage","href","target","rel","imdb_id","production_companies","company","logo_path","PreferencesComponent","dispatch","useDispatch","_useSelector","useSelector","recommendationsRef","useRef","onSubmit","e","preventDefault","url","response","filteredMovies","filter","toLowerCase","original_language","parseFloat","current","scrollIntoView","behavior","catch","error","console","value","onChange","ref","title","App","Router","Routes","Route","path","element","Preferences","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2e7953b5.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  rating: '',\r\n  releaseYear: '',\r\n  language: '',\r\n  movieRecommendations: [],\r\n};\r\n\r\n// Reducer\r\nconst preferencesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // Handle setting the rating\r\n    case 'SET_RATING':\r\n      return { ...state, rating: action.payload };\r\n    // Handle setting the release year\r\n    case 'SET_RELEASE_YEAR':\r\n      return { ...state, releaseYear: action.payload };\r\n    // Handle setting the language\r\n    case 'SET_LANGUAGE':\r\n      return { ...state, language: action.payload };\r\n    // Handle setting the movie recommendations\r\n    case 'SET_MOVIE_RECOMMENDATIONS':\r\n      return { ...state, movieRecommendations: action.payload };\r\n    // Default case: return the current state\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create Redux store\r\nconst store = createStore(preferencesReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => {\n  // Access the current location using the `useLocation` hook from react-router-dom\n  const location = useLocation();\n\n  return (\n    <div className=\"header\">\n      <div className=\"headerLeft\">\n        {/* Link to the home page with the IMDb logo */}\n        <Link to=\"/\" className={location.pathname === \"/\" ? \"active\" : \"\"}>\n          <img\n            className=\"header__icon\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/IMDB_Logo_2016.svg/2560px-IMDB_Logo_2016.svg.png\"\n            alt=\"IMDb Logo\"\n          />\n        </Link>\n        {/* Link to the \"Popular\" movies page */}\n        <Link\n          to=\"/movies/popular\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/popular\" ? \"active\" : \"\"}\n        >\n          <span>Popular</span>\n        </Link>\n        {/* Link to the \"Top Rated\" movies page */}\n        <Link\n          to=\"/movies/top_rated\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/top_rated\" ? \"active\" : \"\"}\n        >\n          <span>Top Rated</span>\n        </Link>\n        {/* Link to the \"Upcoming\" movies page */}\n        <Link\n          to=\"/movies/upcoming\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/upcoming\" ? \"active\" : \"\"}\n        >\n          <span>Upcoming</span>\n        </Link>\n        {/* Link to the \"Preferences\" page */}\n        <Link\n          to=\"/movies/preferences\"\n          style={{ textDecoration: \"none\" }}\n          className={location.pathname === \"/movies/preferences\" ? \"active\" : \"\"}\n        >\n          <span>Preferences</span>\n        </Link>\n      </div>\n      <div className=\"headerRight\">\n        {/* Search form */}\n        <form>\n          <input type=\"text\" placeholder=\"Search for movies...\" />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\nimport \"./card.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Cards = ({ movie }) => {\n  // State to track the loading state of the component\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate loading state for 1.5 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1500);\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        // Show skeleton while loading\n        <div className=\"cards\">\n          <SkeletonTheme color=\"#202020\" highlightColor=\"#444\">\n            <Skeleton height={300} duration={2} />\n          </SkeletonTheme>\n        </div>\n      ) : (\n        // Render movie card when not loading\n        <Link to={`/movie/${movie.id}`} style={{ textDecoration: \"none\", color: \"white\" }}>\n          <div className=\"cards\">\n            {/* Display movie poster image */}\n            <img className=\"cards__img\" src={`https://image.tmdb.org/t/p/original${movie ? movie.poster_path : \"\"}`} alt=\"Movie Poster\" />\n            <div className=\"cards__overlay\">\n              {/* Display movie title */}\n              <div className=\"card__title\">{movie ? movie.original_title : \"\"}</div>\n              <div className=\"card__runtime\">\n                {/* Display release date and rating */}\n                {movie ? movie.release_date : \"\"}\n                <span className=\"card__rating\">\n                  {movie ? movie.vote_average : \"\"}\n                  <i className=\"fas fa-star\" />\n                </span>\n              </div>\n              {/* Display truncated movie description */}\n              <div className=\"card__description\">\n                {movie ? `${movie.overview.slice(0, 118)}...` : \"\"}\n              </div>\n            </div>\n          </div>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from \"react\";\nimport \"./movieList.css\";\nimport { useParams } from \"react-router-dom\";\nimport Cards from \"../card/card\";\n\nconst MovieList = () => {\n  // State to store the list of movies\n  const [movieList, setMovieList] = useState([]);\n  \n  // Access the URL parameter \"type\" using the useParams hook\n  const { type } = useParams();\n\n  useEffect(() => {\n    // Fetch movie data when the component mounts\n    getData();\n  }, []);\n\n  useEffect(() => {\n    // Fetch movie data whenever the \"type\" parameter changes\n    getData();\n  }, [type]);\n\n  const getData = () => {\n    // Fetch movie data from the API based on the selected movie type\n    fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\n      .then((res) => res.json())\n      .then((data) => setMovieList(data.results));\n  };\n\n  return (\n    <div className=\"movie__list\">\n      {/* Display the title based on the selected movie type */}\n      <h2 className=\"list__title\">{(type ? type : \"POPULAR\").toUpperCase()}</h2>\n      <div className=\"list__cards\">\n        {/* Render movie cards for each movie in the movieList */}\n        {movieList.map((movie) => (\n          <Cards movie={movie} key={movie.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./home.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport { Link } from \"react-router-dom\";\nimport MovieList from \"../../components/movieList/movieList\";\n\nconst Home = () => {\n  // State to store popular movies\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    // Fetch popular movies when the component mounts\n    fetch(\n      \"https://api.themoviedb.org/3/movie/popular?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US\"\n    )\n      .then((res) => res.json())\n      .then((data) => setPopularMovies(data.results));\n  }, []);\n\n  return (\n    <>\n      <div className=\"poster\">\n        {/* Carousel component for displaying popular movie posters */}\n        <Carousel\n          showThumbs={false}\n          autoPlay={true}\n          transitionTime={3}\n          infiniteLoop={true}\n          showStatus={false}\n        >\n          {/* Render each popular movie as a slide in the carousel */}\n          {popularMovies.map((movie) => (\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              to={`/movie/${movie.id}`}\n              key={movie.id}\n            >\n              <div className=\"posterImage\">\n                <img\n                  src={`https://image.tmdb.org/t/p/original${\n                    movie && movie.backdrop_path\n                  }`}\n                  alt={movie ? movie.original_title : \"\"}\n                />\n              </div>\n              <div className=\"posterImage__overlay\">\n                <div className=\"posterImage__title\">\n                  {movie ? movie.original_title : \"\"}\n                </div>\n                <div className=\"posterImage__runtime\">\n                  {movie ? movie.release_date : \"\"}\n                  <span className=\"posterImage__rating\">\n                    {movie ? movie.vote_average : \"\"}\n                    <i className=\"fas fa-star\" />{\" \"}\n                  </span>\n                </div>\n                <div className=\"posterImage__description\">\n                  {movie ? movie.overview : \"\"}\n                </div>\n              </div>\n            </Link>\n          ))}\n        </Carousel>\n        {/* Render the MovieList component */}\n        <MovieList />\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport \"./movie.css\";\nimport { useParams } from \"react-router-dom\";\n\nconst Movie = () => {\n  // State to store current movie details\n  const [currentMovieDetail, setMovie] = useState();\n  const { id } = useParams();\n\n  useEffect(() => {\n    getData();\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getData = () => {\n    // Fetch movie details based on the ID parameter\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`\n    )\n      .then((res) => res.json())\n      .then((data) => setMovie(data));\n  };\n\n  return (\n    <div className=\"movie\">\n      <div className=\"movie__intro\">\n        <img\n          className=\"movie__backdrop\"\n          src={`https://image.tmdb.org/t/p/original${\n            currentMovieDetail ? currentMovieDetail.backdrop_path : \"\"\n          }`}\n          alt=\"\"\n        />\n      </div>\n      <div className=\"movie__detail\">\n        <div className=\"movie__detailLeft\">\n          <div className=\"movie__posterBox\">\n            <img\n              className=\"movie__poster\"\n              src={`https://image.tmdb.org/t/p/original${\n                currentMovieDetail ? currentMovieDetail.poster_path : \"\"\n              }`}\n              alt=\"\"\n            />\n          </div>\n        </div>\n        <div className=\"movie__detailRight\">\n          <div className=\"movie__detailRightTop\">\n            <div className=\"movie__name\">\n              {currentMovieDetail ? currentMovieDetail.original_title : \"\"}\n            </div>\n            <div className=\"movie__tagline\">\n              {currentMovieDetail ? currentMovieDetail.tagline : \"\"}\n            </div>\n            <div className=\"movie__rating\">\n              {currentMovieDetail ? currentMovieDetail.vote_average : \"\"}{\" \"}\n              <i className=\"fas fa-star\" />\n              <span className=\"movie__voteCount\">\n                {currentMovieDetail ? `(${currentMovieDetail.vote_count}) votes` : \"\"}\n              </span>\n            </div>\n            <div className=\"movie__runtime\">\n              {currentMovieDetail ? `${currentMovieDetail.runtime} mins` : \"\"}\n            </div>\n            <div className=\"movie__releaseDate\">\n              {currentMovieDetail ? `Release date: ${currentMovieDetail.release_date}` : \"\"}\n            </div>\n            <div className=\"movie__genres\">\n              {/* Render each genre for the current movie */}\n              {currentMovieDetail &&\n                currentMovieDetail.genres &&\n                currentMovieDetail.genres.map((genre) => (\n                  <span className=\"movie__genre\" key={genre.id}>\n                    {genre.name}\n                  </span>\n                ))}\n            </div>\n          </div>\n          <div className=\"movie__detailRightBottom\">\n            <div className=\"synopsisText\">Synopsis</div>\n            <div>{currentMovieDetail ? currentMovieDetail.overview : \"\"}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"movie__links\">\n        <div className=\"movie__heading\">Useful Links</div>\n        {/* Render homepage link if available */}\n        {currentMovieDetail && currentMovieDetail.homepage && (\n          <a href={currentMovieDetail.homepage} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: \"none\" }}>\n            <p>\n              <span className=\"movie__homeButton movie__Button\">Homepage <i className=\"newTab fas fa-external-link-alt\"></i></span>\n            </p>\n          </a>\n        )}\n        {/* Render IMDb link if available */}\n        {currentMovieDetail && currentMovieDetail.imdb_id && (\n          <a href={`https://www.imdb.com/title/${currentMovieDetail.imdb_id}`} target=\"_blank\" rel=\"noopener noreferrer\" style={{ textDecoration: \"none\" }}>\n            <p>\n              <span className=\"movie__imdbButton movie__Button\">IMDb<i className=\"newTab fas fa-external-link-alt\"></i></span>\n            </p>\n          </a>\n        )}\n      </div>\n      <div className=\"movie__heading\">Production companies</div>\n      <div className=\"movie__production\">\n        {/* Render each production company logo and name */}\n        {currentMovieDetail &&\n          currentMovieDetail.production_companies &&\n          currentMovieDetail.production_companies.map((company) => (\n            <React.Fragment key={company.id}>\n              {company.logo_path && (\n                <span className=\"productionCompanyImage\">\n                  <img\n                    className=\"movie__productionComapany\"\n                    src={`https://image.tmdb.org/t/p/original${company.logo_path}`}\n                    alt=\"\"\n                  />\n                  <span>{company.name}</span>\n                </span>\n              )}\n            </React.Fragment>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movie;\n","import React, { useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Preferences.css';\r\n\r\nconst PreferencesComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const { rating, releaseYear, language, movieRecommendations } = useSelector((state) => state);\r\n\r\n  const recommendationsRef = useRef(null); // Create a ref for the recommendations container\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Make API call using user preferences (rating, releaseYear, language)\r\n    const apiKey = '4e44d9029b1270a757cddc766a1bcb63';\r\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc`;\r\n\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Process the data and filter movie recommendations by rating and language\r\n        const filteredMovies = data.results.filter((movie) => {\r\n          // Check if the input value is \"Finnish\"\r\n          if (language.toLowerCase() === 'finnish') {\r\n            return movie.original_language === 'fi' && movie.vote_average > parseFloat(rating);\r\n          }\r\n          return movie.original_language === 'en' && movie.vote_average > parseFloat(rating);\r\n        });\r\n\r\n        // Update Redux store with the filtered movie recommendations\r\n        dispatch({ type: 'SET_MOVIE_RECOMMENDATIONS', payload: filteredMovies });\r\n\r\n        // Scroll down to the recommendations section\r\n        recommendationsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"preferences-container\">\r\n      <h2>Movie Preferences</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form inputs */}\r\n        <div>\r\n          {/* Rating */}\r\n          <label>\r\n            <span>Rating:</span>\r\n            <input\r\n              type=\"number\"\r\n              value={rating}\r\n              onChange={(e) => dispatch({ type: 'SET_RATING', payload: e.target.value })}\r\n              placeholder=\"Enter minimum rating\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Release Year */}\r\n          <label>\r\n            <span>Release Year:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={releaseYear}\r\n              onChange={(e) => dispatch({ type: 'SET_RELEASE_YEAR', payload: e.target.value })}\r\n              placeholder=\"e.g. 2020\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Language */}\r\n          <label>\r\n            <span>Language:</span>\r\n            <input\r\n              type=\"text\"\r\n              value={language}\r\n              onChange={(e) => dispatch({ type: 'SET_LANGUAGE', payload: e.target.value })}\r\n              placeholder=\"e.g. English, Finnish\"\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          {/* Submit button */}\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Display movie recommendations based on user preferences */}\r\n      <div className=\"recommendations-container\" ref={recommendationsRef}>\r\n        <h3>Movie Recommendations</h3>\r\n        <div className=\"movie__recommendationsList\">\r\n          {movieRecommendations.length > 0 ? (\r\n            movieRecommendations.map((movie) => (\r\n              <div key={movie.id} className=\"movie__recommendation\">\r\n                {/* Render movie details */}\r\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} className=\"movie__recommendationPoster\" />\r\n                <div className=\"movie__recommendationTitle\">{movie.title}</div>\r\n                <div className=\"movie__recommendationRating\">Rating: {movie.vote_average}</div>\r\n                <div className=\"movie__recommendationLanguage\">Language: {movie.original_language}</div>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No movie recommendations available.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreferencesComponent;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/header/Header\";\nimport Home from \"./pages/home/home\";\nimport MovieList from \"./components/movieList/movieList\";\nimport Movie from \"./pages/movieDetail/movie\";\nimport Preferences from \"./pages/preferences/Preferences\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Set up the React Router */}\n      <Router>\n        {/* Render the header component */}\n        <Header />\n        {/* Define routes */}\n        <Routes>\n          {/* Define the home route */}\n          <Route path=\"/\" element={<Home />} />\n          {/* Define the movie detail route */}\n          <Route path=\"/movie/:id\" element={<Movie />} />\n          {/* Define the movie list route */}\n          <Route path=\"/movies/:type\" element={<MovieList />} />\n          {/* Define the preferences route */}\n          <Route path=\"/movies/preferences\" element={<Preferences />} />\n          {/* Define a catch-all route for any other unknown paths */}\n          <Route path=\"/*\" element={<h1>Error Page</h1>} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\n\n// Render the application\nReactDOM.render(\n  // Provide the Redux store to the entire application\n  <Provider store={store}>\n    {/* Render the root component of the application */}\n    <App />\n  </Provider>,\n  // Mount the application to the root element in the HTML document\n  document.getElementById('root')\n);\n"],"sourceRoot":""}